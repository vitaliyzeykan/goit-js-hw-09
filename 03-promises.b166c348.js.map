{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,qBAAqBH,QAAeC,OAExCG,EAAI,oBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,CA5BbL,EAAKa,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAIC,EAAShB,EAAKgB,OAAOC,MACrBZ,EAAQL,EAAKK,MAAMY,MACvBZ,EAAQa,OAAOb,GACf,IAAIc,EAAOnB,EAAKmB,KAAKF,MAGrB,IAFAE,EAAOD,OAAOC,GAETC,EAAI,EAAGA,GAAKJ,EAAQI,IACvBjB,EAAciB,EAAGf,GACdgB,MAAKJ,GAASK,EAAAxB,GAASyB,OAAOC,QAAQP,KACtCQ,OAAMC,GAAOJ,EAAAxB,GAASyB,OAAOI,QAAQD,KACxCrB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(event) {\n  event.preventDefault();\n\n  let amount = form.amount.value;\n  let delay = form.delay.value;\n  delay = Number(delay);\n  let step = form.step.value;\n  step = Number(step);\n\n  for (i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(value => Notiflix.Notify.success(value))\n      .catch(err => Notiflix.Notify.failure(err));\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","amount","value","Number","step","i","then","$parcel$interopDefault","Notify","success","catch","err","failure"],"version":3,"file":"03-promises.b166c348.js.map"}